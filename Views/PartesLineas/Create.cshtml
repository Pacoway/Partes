@model OSCPartes.Models.ParteLinea

@using OSCPartes.Configuracion;

@{
    ViewBag.Title = "Crear Nueva Linea de parte";
    Model.UsuarioCreacion = /*@User.Identity.Name*/ "Francisco";
}

<h2>Crear Nueva Linea de parte</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, "Fecha del ParteLinea", htmlAttributes: new { @class = "col-md-3 text-left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "datefield form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TecnicosSeleccionados, "Tecnicos", htmlAttributes: new { @class = "col-md-10 text-left" })
            <span class="col-md-3">Seleccione los Tecnicos</span>
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.TecnicosSeleccionados, Model.Tecnicos, new { @class = "form-control", SelectionMode = "multiple" })

                @Html.ValidationMessageFor(model => model.TecnicosSeleccionados, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehiculosSeleccionados, "Vehiculos", htmlAttributes: new { @class = "col-md-10 text-left" })
            <span class="col-md-3">Seleccione los Vehiculos</span>
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.VehiculosSeleccionados, Model.Vehiculos, new { @class = "form-control", SelectionMode = "multiple" })

                @Html.ValidationMessageFor(model => model.VehiculosSeleccionados, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Inicio, "Hora de Inicio", htmlAttributes: new { @class = "col-md-3 text-left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Inicio, new { htmlAttributes = new { @id = "inicio", @class = "datefield form-control", type = "datetime" } })
                @Html.ValidationMessageFor(model => model.Inicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fin, "Hora de Finalización", htmlAttributes: new { @class = "col-md-3 text-left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fin, new { htmlAttributes = new { @id = "fin", @class = "datefield form-control", type = "datetime" } })
                @Html.ValidationMessageFor(model => model.Fin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KM, htmlAttributes: new { @class = "col-md-3 text-left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="tipo_input">
            @Html.LabelFor(model => model.TipoSeleccionado, htmlAttributes: new { @class = "col-md-3 text-left" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoSeleccionado, Model.Tipos, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoSeleccionado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "col-md-3 text-left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioCreacion, "Persona que Crea la Linea de Parte", htmlAttributes: new { @class = "col-md-3 text-left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UsuarioCreacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UsuarioCreacion, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <button type="submit">
                    <i class="glyphicon glyphicon-plus"></i> Crear Nuevo ParteLinea
                </button>
            </div>
        </div>
    </div>
}

<div>
    <button type="button" onclick='window.location = "../../Partes/Details/@Model.IDParte"'>
        <i class="glyphicon glyphicon-list-alt"></i> Listado
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {
        $('#inicio,#fin').each(function () {
            $(this).click(function () {
                $(this).val("");
            });

        });
        $('#inicio,#fin').each(function () {
            $(this).change(function () {
                var resultTime = "";
                var text = $(this).val().replace(":", "").substring(0, 4);
                var horas = text.substring(0, 2);
                if (horas.length == 0) {
                    horas = "00";
                }
                if (horas.length == 1) {
                    horas = "0" + horas;
                }
                if (parseInt(horas) > 23) {
                    horas = 23;
                }
                var minutos = text.substring(2, 4);
                if (parseInt(minutos) > 59) {
                    minutos = 59;
                }
                else if (minutos == "00") {
                    minutos = "00";                
                }
                else if (parseInt(minutos) >= 0 && parseInt(minutos) < 10) {
                    minutos = "0" + minutos;
                }
                else if (minutos == "") {
                    minutos = "00";
                }
                resultTime = horas + ":" + minutos;
                $(this).val(resultTime);
            });
        });
    });
</script>

    }
